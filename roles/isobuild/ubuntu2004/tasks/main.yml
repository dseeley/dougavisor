---

- name: dougavisor/isobuild | Install xorriso and dependencies
  become: yes
  apt:
    update_cache: yes
    name: [ "xorriso", "p7zip-full", "isolinux" ]   # "fakeroot", "binutils"

- name: dougavisor/isobuild | create temporary directory
  file:
    state: directory
    path: "isoTEMP_{{targethost}}_{{os_id}}"
  register: r__file_tempdir


- name: dougavisor/isobuild | Extract the ISO (use this rather than xorriso, because the latter creates a recursive /ubuntu directory)
  command: "7z x ubuntu-20.04.4-live-server-amd64.iso -x'![BOOT]' -o{{r__file_tempdir.path}} -y"

- name: dougavisor/isobuild | ensure md5sum.txt file exists and is empty (as we're about to change "boot/grub/grub.cfg")
  copy:
    content: ""
    dest: "{{ r__file_tempdir.path }}/md5sum.txt"
    force: yes

#- name: dougavisor/isobuild | (Optionally) Regenerate md5
#  shell: "find '!' -name \"md5sum.txt\" '!' -path \"./isolinux/*\" -follow -type f -exec md5sum {} \\; > ./md5sum.txt"
#  args:
#     chdir: "{{ r__file_tempdir.path }}"

- block:
    - name: dougavisor/isobuild | create needed iso dirs
      file: path={{ r__file_tempdir.path }}/{{item | dirname }} state=directory mode=0755
      with_items: "{{filepaths_to_copy}}"

    - name: dougavisor/isobuild | copy nocloud and grub templates into iso dirs (strip '.j2' from filename)
      template:
        src: "{{item}}"
        dest: "{{r__file_tempdir.path}}/{{item | regex_replace('^(.*?)\\.j2', '\\1')}}"
      with_items: "{{filepaths_to_copy}}"
  vars:
    filepaths_to_copy:
      - "boot/grub/grub.cfg.j2"
      - "nocloud/user-data.j2"
      - "nocloud/meta-data.j2"
      - "isolinux/txt.cfg"


- name: dougavisor/isobuild | xorriso - Build the new ISO (gist.github.com/s3rj1k/55b10cd20f31542046018fcce32f103e)
  command: "xorriso -as mkisofs -r -V {{targethost}}_{{os_id}} -o {{targethost}}_{{os_id}}_autoinstall.iso -J -l -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -e boot/grub/efi.img -no-emul-boot -isohybrid-gpt-basdat -isohybrid-apm-hfsplus -isohybrid-mbr /usr/lib/ISOLINUX/isohdpfx.bin {{r__file_tempdir.path}}/boot {{r__file_tempdir.path}}"
  
